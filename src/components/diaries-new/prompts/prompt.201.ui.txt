아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @02-wireframe.mdc
            - @03-ui.mdc

==============================================

조건-피그마) 활용할MCP: CursorTalkToFigmaMCP(채널명: oq3a7d0f)
조건-피그마) 구현될 컴포넌트 노드ID(wrapper(+ header 제목 포함) 영역): 3:837
조건-피그마) 구현될 컴포넌트 노드ID(emotion-box 영역): 3:840
조건-피그마) 구현될 컴포넌트 노드ID(input-title 영역): 3:849
조건-피그마) 구현될 컴포넌트 노드ID(input-content 영역): 3:853
조건-피그마) 구현될 컴포넌트 노드ID(footer 영역): 3:857

조건-파일경로) 구현될 TSX 파일경로: src/components/diaries-new/index.tsx
조건-파일경로) 구현될 CSS 파일경로: src/components/diaries-new/styles.module.css

==============================================

조건-공통목록) 사용할 공통컴포넌트 목록
            - <Input />, <Button />

조건-공통목록) 사용할 색상 목록(global.css에 명시된 변수 토큰 활용)
            - 비슷한 토큰 선택하여 사용(하드코딩 금지)

조건-공통목록) 사용할 타이포그래피 목록(global.css에 명시된 변수 토큰 활용)
            - 비슷한 토큰 선택하여 사용(하드코딩 금지)

==============================================

핵심요구사항) MCP를 연동하여 피그마의 디자인을 이미 만들어져있는 와이어프레임의 
            wrapper, emotion-box, input-title, input-content, footer 영역에 그대로 구현할 것.

핵심요구사항) 일기등록은 아래의 조건으로 Enum 데이터를 만들어 적용할 것.
            1. 일기카드는 감정과 관련된 내용으로 enum 타입을 활용할 것.
                - 경로: commons/constants/enum.ts
                - 조건: enum.ts의 원본은 수정하지 말 것.
            
            2. 아래의 지시를 반영하여 구현할 것.
                1) emotion-box
                    - "오늘 기분은 어땠나요?" 텍스트: 피그마와 동일하게 구현할 것.
                    - 라디오버튼(행복해요, 슬퍼요, 놀랐어요, 화나요, 기타): emotion enum 타입에 지정된 감정텍스트. "행복해요", "슬퍼요" 등 사용할 것.

핵심요구사항) 공통컴포넌트는 다음의 규칙을 지켜 step-by-step 으로 구현하고, 적용 결과를 체크리스트로 반환할 것.
            1. 공통컴포넌트 원본을 수정하지 말고, 아래의 props만 활용할 것.
                - variant: primary, secondary를 확인하여 구현할 것.
                - theme: light 모드만 사용할 것.
                - size: 피그마와 일치할 것.
                - className 전달: width만 허용할 것.

            2. 적용될 공통컴포넌트 목록을 구현할 것.
                1) wrapper: 빈 영역

                2) header
                    - 일기쓰기텍스트: 공통컴포넌트없음

                3) input-title
                    - 제목입력: <Input />

                4) input-content
                    - 내용입력: 공통컴포넌트없음

                5) footer
                    - 닫기버튼: <Button />
                    - 등록하기버튼: <Button />
