아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @04-func.mdc

==============================================

조건-파일경로) 참고할 TSX  파일경로: src/components/diaries/index.tsx
조건-파일경로) 참고할 CSS  파일경로: src/components/diaries/styles.module.css
조건-파일경로) 구현될 HOOK 파일경로: src/components/diaries/hooks/index.pagination.hook.ts
조건-파일경로) 구현될 TEST 파일경로: src/components/diaries/tests/index.pagination.hook.spec.ts

==============================================

핵심요구사항) 병렬처리 구현을 위한 작업 방식 조건
            - 다른 채팅에서 개발중인 파일을 수정 및 삭제 하지 말 것.
            - 테스트 충돌을 방지하기 위해, 빌드테스트, 전체테스트를 하지 말 것.

핵심요구사항) 다음의 기능을 playwright 테스트를 활용하여 TDD기반으로 구현하고, 테스트에 통과할 때까지 반복할 것.
            1) 테스트 제외 라이브러리
                - jest
                - @testing-library/react

            2) 테스트 조건
                - timeout은 설정하지 않거나, 500ms 미만으로 설정할 것.
                - 모든 페이지의 로드 식별 조건은 아래를 따를 것.
                    - 페이지 로드 식별 요구사항: 고정식별자 data-testid 대기 방법
                    - 페이지 로드 식별 금지사항: networkidle 대기 방법

            3) 테스트 로컬스토리지 조건
                - 실제데이터를 사용할 것.
                - Mock데이터 사용하지 말 것.

            4) 테스트 데이터타입
                - 저장소: 로컬스토리지
                - key: diaries
                - value: [{ 
                    id: number,
                    title: string, 
                    content: string, 
                    emotion: enum.ts 경로에 정의된 emotion enum 타입을 import하여 사용할 것.
                    createdAt: string
                }]

            5) 테스트시나리오(모든유저)
                1. /diaries에 접속하여 페이지 로드 확인
                2. 하단 유저시나리오에 적절한 테스트시나리오를 생성하여 진행

핵심요구사항) 다음의 조건에 맞게 일기 페이지네이션 기능을 step-by-step 으로 구현하고, 적용 결과를 체크리스트로 반환할 것.
            1) 유저시나리오(페이지네이션 클릭하기)
                1. 한 페이지에 3행 4열로 총 12개의 일기카드가 노출되는지 확인
                2. 페이지 번호가 1, 2, 3, 4, 5 형태로 5개 단위로 노출되는지 확인
                3. 페이지번호 클릭
                4. 해당 페이지번호에 맞는 일기 컨텐츠목록 보여지는지 확인

            2) 유저시나리오(검색결과 페이지네이션하기)
                1. 검색창에 검색어를 입력하여 검색
                2. 검색 결과에 맞게 페이지 수가 변경되었는지 확인

            3) 유저시나리오(필터결과 페이지네이션하기)
                1. 필터선택박스 클릭
                2. 메뉴 선택시, 선택한 emotion과 일치하는 일기 카드들로 페이지 수가 변경되었는지 확인 => enum.ts 경로에 정의된 emotion enum 타입을 import하여 비교 및 참조할 것.
