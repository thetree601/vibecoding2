아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @02-wireframe.mdc
            - @03-ui.mdc

==============================================

조건-피그마) 활용할MCP: CursorTalkToFigmaMCP(채널명: njpgwkxt)
조건-피그마) 구현될 컴포넌트 노드ID(main 영역): 3:1575

조건-파일경로) 구현될 TSX 파일경로: src/components/diaries/index.tsx
조건-파일경로) 구현될 CSS 파일경로: src/components/diaries/styles.module.css

==============================================

조건-공통목록) 사용할 색상 목록(global.css에 명시된 변수 토큰 활용)
            - 비슷한 토큰 선택하여 사용(하드코딩 금지)

조건-공통목록) 사용할 타이포그래피 목록(global.css에 명시된 변수 토큰 활용)
            - 비슷한 토큰 선택하여 사용(하드코딩 금지)

==============================================

기존히스토리-참고만) MCP를 연동하여 피그마의 디자인을 이미 만들어져있는 와이어프레임의 main 영역에 그대로 구현할 것.

==============================================

기존히스토리-참고만) styes_cardImage의 border-radius를 16px 16px 16px 16px 로 통일할 것.

기존히스토리-참고만) styles_cardContent의 height를 제거할 것.

기존히스토리-참고만) styles_diaryCard의 box-shadow 제거할 것.


==============================================

핵심요구사항) 카드 삭제 버튼에서 바깥쪽 원과 안의 원이 두개 구현되어있고, 그 안에 x표시가 있는데 바깥쪽 원 남기고 그 안에 x를 구현해줘. 그러면 x 표시가 지금보다 좀 더 커지겠지.

핵심요구사항) 지금은 메인페이지 영역에 너가 임의로 바탕색을 깔고 그 안에 패딩을 넣어서 카드를 배치했는데, 바탕색은 없어야 해. 

핵심요구사항) 지금은 맨 맽줄 카드의 하단들이 잘려 보이고 또한 맨 오른쪽 카드들은 영역을 넘어서는데 그 이유가 2번에서 너가 패딩을 임의로 줬기 때문에 
 그런거야. 패딩 없이 카드들이 바로 보여야 해. 




핵심요구사항) 일기카드는 아래의 조건으로 Mock 데이터를 만들어 적용할 것.
            1. 일기카드는 감정과 관련된 내용으로 enum 타입을 활용할 것.
                - 경로: commons/constants/enum.ts
                - 조건: enum.ts의 원본은 수정하지 말 것.
            
            2. 아래의 지시를 반영하여 구현할 것.
                - 날짜: 피그마와 동일하게 구현할 것.
                - 내용: 피그마와 동일하게 구현할 것.
                - 사진: emotion enum 타입에 지정된 이미지경로(/images) 사용할 것.
                - 감정텍스트: emotion enum 타입에 지정된 감정텍스트. "행복해요", "슬퍼요" 등 사용할 것.
