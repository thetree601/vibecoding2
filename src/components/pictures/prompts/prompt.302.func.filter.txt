아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @04-func.mdc

==============================================

조건-파일경로) 참고할 TSX  파일경로: src/components/pictures/index.tsx
조건-파일경로) 참고할 CSS  파일경로: src/components/pictures/styles.module.css
조건-파일경로) 구현될 HOOK 파일경로: src/components/pictures/hooks/index.filter.hook.ts
조건-파일경로) 구현될 TEST 파일경로: src/components/pictures/tests/index.filter.hook.spec.ts

==============================================

핵심요구사항) 병렬처리 구현을 위한 작업 방식 조건
            - 다른 채팅에서 개발중인 파일을 수정 및 삭제 하지 말 것.
            - 테스트 충돌을 방지하기 위해, 빌드테스트, 전체테스트를 하지 말 것.

핵심요구사항) 다음의 기능을 playwright 테스트를 활용하여 TDD기반으로 구현하고, 테스트에 통과할 때까지 반복할 것.
            1) 테스트 제외 라이브러리
                - jest
                - @testing-library/react

            2) 테스트 조건
                - timeout은 network 통신인 경우 2000ms 미만으로 설정할 것.
                - timeout은 network 통신이 아닌 경우 설정하지 않거나, 500ms 미만으로 설정할 것.
                - 모든 페이지의 로드 식별 조건은 아래를 따를 것.
                    - 페이지 로드 식별 요구사항: 고정식별자 data-testid 대기 방법
                    - 페이지 로드 식별 금지사항: networkidle 대기 방법

            3) 테스트시나리오(모든유저)
                1. /pictures 페이지가 완전히 로드된 후 테스트할 것.
                2. 하단 유저시나리오에 적절한 테스트시나리오를 이어나갈 것.

핵심요구사항) 다음의 조건에 맞게 강아지사진 필터 기능을 step-by-step 으로 구현하고, 적용 결과를 체크리스트로 반환할 것.
            1) 필터 선택박스 조건
                1-1) 선택 가능한 아이템 목록
                        - 기본: 최초 자동 선택
                        - 가로형
                        - 세로형

            2) 유저시나리오(필터 변경하기)
                1. 필터 변경시, 해당 필터 아이템에 해당하는 사이즈로 변경할 것.(단위: px)
                    - 기본: 640 x 640 => 현재 기본 사이즈 유지
                    - 가로형: 640 x 480
                    - 세로형: 480 x 640
