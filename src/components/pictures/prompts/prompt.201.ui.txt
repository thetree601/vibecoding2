아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @02-wireframe.mdc
            - @03-ui.mdc

==============================================

조건-피그마) 활용할MCP: CursorTalkToFigmaMCP(채널명: ebwg5fgc)
조건-피그마) 구현될 컴포넌트 노드ID(filter 영역): 3:140
조건-피그마) 구현될 컴포넌트 노드ID(main 영역): 3:146

조건-파일경로) 구현될 TSX 파일경로: src/components/pictures/index.tsx
조건-파일경로) 구현될 CSS 파일경로: src/components/pictures/styles.module.css

==============================================

조건-공통목록) 사용할 공통컴포넌트 목록
            - <SelectBox />

조건-공통목록) 사용할 색상 목록(global.css에 명시된 변수 토큰 활용)
            - 비슷한 토큰 선택하여 사용(하드코딩 금지)

조건-공통목록) 사용할 타이포그래피 목록(global.css에 명시된 변수 토큰 활용)
            - 비슷한 토큰 선택하여 사용(하드코딩 금지)

==============================================

핵심요구사항) MCP를 연동하여 피그마의 디자인을 이미 만들어져있는 와이어프레임의 filter, main 영역에 그대로 구현할 것.

핵심요구사항) 공통컴포넌트는 다음의 규칙을 지켜 step-by-step 으로 구현하고, 적용 결과를 체크리스트로 반환할 것.
            1) 공통컴포넌트 원본을 수정하지 말고, 아래의 props만 활용할 것.
                - variant: primary, secondary를 확인하여 구현할 것.
                - theme: light 모드만 사용할 것.
                - size: 피그마와 일치할 것.
                - className 전달: width만 허용할 것.

            2) 적용될 공통컴포넌트 목록을 구현할 것.
                - 필터선택박스: <SelectBox />

핵심요구사항) 강아지사진은 아래의 조건으로 Mock 데이터를 만들어 적용할 것.
            1) 아래의 지시를 반영하여 구현할 것.
                1-1) filter
                    - 필터선택박스: 피그마와 동일하게 구현할 것.

                1-2) main
                    - 사이즈: 사이즈는 피그마와 동일한 (가로 x 세로)px 로 구현할 것.
                    - 사진경로: 모든 사진을 동일한 Mock 사진으로 통일할 것. => public/images/dog-1.jpg
