아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc

==============================================

조건-파일경로) 구현될 TSX 파일경로: src/commons/providers/auth/auth.provider.tsx

==============================================

핵심요구사항) 완성된 컴포넌트를 layout에서 import하여 연결시킬 것. (children을 감싸도록 만들 것)
            - 연결될 경로: src/app/layout.tsx
            - 연결될 순서: <ReactQueryProvider /> 보다 위에 위치할 것.

핵심요구사항) 다음의 기능을 구현하고, 하위 컴포넌트들이 사용 가능하도록 제공할 것.
            1) 페이지URL 경로: commons/constants/url.ts

            2) 구현할 기능 목록
                - 로그인
                    1. url.ts에 정의된 로그인페이지로 이동할 것 => /auth/login

                - 로그아웃
                    1. 로컬스토리지에 저장된 accessToken을 제거할 것.
                    2. 로컬스토리지에 저장된 user를 제거할 것.
                    2. url.ts에 정의된 로그인페이지로 이동할 것 => /auth/login

                - 로그인상태검증 
                    1. 로컬스토리지에 저장된 accessToken이 있으면 로그인상태, 그렇지 않으면 비로그인상태로 처리할 것.
                    2. 추가적인 accessToken의 복호화없이 토큰 유/무만 확인할 것.
                    3. 로그인 유/무를 모든 페이지에서 실시간으로 감지하여 최신 로그인상태를 유지할 것.

                - 로그인유저정보조회
                    1. 로컬스토리지에 저장된 user를 반환할 것.
                    3. 로그인 유/무를 모든 페이지에서 실시간으로 감지하여 최신 로그인유저정보를 유지할 것.
